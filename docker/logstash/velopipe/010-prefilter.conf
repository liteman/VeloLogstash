filter {
    mutate { add_tag => "before_check_tags" }

    if "velociraptor" in [tags] {

        grok {
            tag_on_failure => ["artifact_from_path_failed"]
            match => { "[log][file][path]" => "/usr/share/filebeat/logs/velociraptor/(?<Artifact>.*?).json" }
        }

        
        translate {
            source => "Artifact"  # The field in the incoming data to be looked up
            target => "EventTimeStr"  # The field where the result will be stored
            dictionary_path => "/usr/share/logstash/artifact_dictionary.json"
            fallback => "NONE"  # Value to use if no match is found
        }

        if [EventTimeStr] == "NONE" {
            mutate {
                add_field => { "IsForensicTime" => "false"
                               "EventTime" => "%{@timestamp}" }
            }
        } else {
            ruby {
                code => "
                    # Accessing the field value from the event
                    timestr = event.get('[EventTimeStr]')
                    timestamp = event.get(timestr)
                    event.set('EventTime', timestamp)
                    event.set('IsForensicTime', true)
                    "
            }
        }

        mutate {
            remove_field => ["ecs", "host", "agent"]
        }

    } else {
        mutate {
            add_tag => "non_velo_in_velopipe"
        }
    }     
}